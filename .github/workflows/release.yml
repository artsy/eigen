name: Release with Changelog

on:
  push:
    tags:
      - "ios-[0-9]*.[0-9]*.[0-9]*-[0-9]*.[0-9]*.[0-9]*.[0-9]*-submission"
    branches:
      - gkartalis/test-release-notes

permissions:
  contents: write

jobs:
  generate-release:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Setup node.js
        uses: ./.github/actions/setup-node

      - name: Fetch submission tags
        run: |
          # Fetch only iOS and Android submission tags with more specific refspecs
          git fetch origin '+refs/tags/ios-*-submission:refs/tags/ios-*-submission' --depth=300 --jobs=8
          echo "fetched submission tags!"

      - name: Determine iOS tags
        id: determine_tags
        run: |
          # Get all iOS release tags and sort them
          ios_tags=$(git tag --sort=-creatordate | grep "^ios.*submission$" | head -n 10)

          # Get the last and second-to-last iOS tags (first and second in the sorted list)
          last_ios_tag=$(echo "$ios_tags" | head -n1)
          second_last_ios_tag=$(echo "$ios_tags" | head -n2 | tail -n1)

          # Ensure tags are found
          if [ -z "$last_ios_tag" ] || [ -z "$second_last_ios_tag" ]; then
            echo "Error: Could not determine all required tags."
            exit 1
          fi

          # Export tags as step outputs
          echo "last_ios_tag=$last_ios_tag" >> $GITHUB_OUTPUT
          echo "second_last_ios_tag=$second_last_ios_tag" >> $GITHUB_OUTPUT

          # Also export to environment for later steps
          echo "last_ios_tag=$last_ios_tag" >> $GITHUB_ENV
          echo "second_last_ios_tag=$second_last_ios_tag" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          npm install -g yarn
          yarn install
          yarn global add tsx

      - name: Generate changelog
        id: generate_changelog
        run: |
          # Generate changelog and clean up yarn output
          base_changelog=$(yarn generate-changelog "${{ env.second_last_ios_tag }}" "${{ env.last_ios_tag }}" | sed '/^Done in [0-9.]*s\.$/d')

          # Extract version from iOS tag for Sentry link (remove -submission suffix)
          ios_version=$(echo "${{ env.last_ios_tag }}" | sed -E 's/^(ios-[0-9]+\.[0-9]+\.[0-9]+)-.*$/\1/')

          # Add monitoring links with correct Sentry URL format
          ios_link="Monitor the iOS release on Sentry [here :lock:](https://artsynet.sentry.io/explore/releases/${ios_version}/?project=5867225)"

          changelog="${base_changelog}\n\n$ios_link"

          echo "changelog<<EOF" >> $GITHUB_ENV
          echo "$changelog" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Extract the version from the iOS tag for the title
          version=$(echo "${{ env.last_ios_tag }}" | sed -E 's/^ios-([0-9]+\.[0-9]+\.[0-9]+)-.*/\1/')

          # Write changelog to a temporary file using heredoc to avoid shell escaping issues
          cat > /tmp/changelog.md << 'EOF'
          ${{ env.changelog }}
          EOF

          gh release create "${{ env.last_ios_tag }}" \
              --repo "${{ github.repository }}" \
              --title "$version" \
              --notes-file /tmp/changelog.md
