<?xml version="1.0" encoding="UTF-8"?>
<Scheme
   LastUpgradeVersion = "1630"
   version = "1.7">
   <BuildAction
      parallelizeBuildables = "YES"
      buildImplicitDependencies = "YES"
      buildArchitectures = "Automatic">
      <PreActions>
         <ExecutionAction
            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
            <ActionContent
               title = "Run Script"
               scriptText = "export KEYSFILE=keys.shared.json&#10;export PATH=&quot;/opt/homebrew/bin:/usr/local/bin:$PATH&quot;&#10;export node_version=&quot;22.0.0&quot;&#10;&#10;# Check for mise&#10;if command -v mise &gt;/dev/null 2&gt;&amp;1; then&#10;  eval &quot;$(mise activate bash)&quot;&#10;  mise install -q&#10;  echo &quot;Using Node via mise: $(node -v)&quot;&#10;elif [ -f &quot;/opt/homebrew/opt/asdf/libexec/asdf.sh&quot; ]; then&#10;  . &quot;/opt/homebrew/opt/asdf/libexec/asdf.sh&quot;&#10;  echo &quot;Using Node via asdf&quot;&#10;  asdf local nodejs $NODE_VERSION&#10;elif [ -f &quot;/usr/local/libexec/asdf.sh&quot; ]; then&#10;  . &quot;/usr/local/libexec/asdf.sh&quot;&#10;  echo &quot;Using Node via asdf&quot;&#10;  asdf local nodejs $NODE_VERSION&#10;elif [ -f &quot;$HOME/.asdf/bin/asdf&quot; ]; then&#10;  echo &quot;Using Node via asdf&quot;&#10;  ASDF_DIR=&quot;${ASDF_DIR:-$HOME/.asdf}&quot;&#10;  export PATH=&quot;$ASDF_DIR/bin:$ASDF_DIR/shims:$PATH&quot;&#10;  asdf local nodejs $NODE_VERSION&#10;elif command -v asdf &gt;/dev/null 2&gt;&amp;1; then&#10;  echo &quot;Using Node via asdf&quot;&#10;  ASDF_DIR=&quot;${ASDF_DIR:-$HOME/.asdf}&quot;&#10;  export PATH=&quot;$ASDF_DIR/bin:$ASDF_DIR/shims:$PATH&quot;&#10;  asdf set nodejs $NODE_VERSION&#10;# Check for nvm&#10;elif [ -f &quot;$HOME/.nvm/nvm.sh&quot; ]; then&#10;  . &quot;$HOME/.nvm/nvm.sh&quot;&#10;  nvm use default &gt; /dev/null&#10;  echo &quot;Using Node via nvm&quot;&#10;elif command -v node &gt;/dev/null 2&gt;&amp;1; then&#10;    echo &quot;Node is already available: $(node -v)&quot;&#10;else&#10;  echo &quot;Neither asdf nor nvm found! Please install one of them to use Node.js.&quot;&#10;  exit 1&#10;fi&#10;&#10;&quot;${SRCROOT}/../node_modules/react-native-keys/keysIOS.js&quot;&#10;">
               <EnvironmentBuildable>
                  <BuildableReference
                     BuildableIdentifier = "primary"
                     BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
                     BuildableName = "Artsy.app"
                     BlueprintName = "Artsy"
                     ReferencedContainer = "container:Artsy.xcodeproj">
                  </BuildableReference>
               </EnvironmentBuildable>
            </ActionContent>
         </ExecutionAction>
      </PreActions>
      <BuildActionEntries>
         <BuildActionEntry
            buildForTesting = "YES"
            buildForRunning = "YES"
            buildForProfiling = "YES"
            buildForArchiving = "YES"
            buildForAnalyzing = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
               BuildableName = "Artsy.app"
               BlueprintName = "Artsy"
               ReferencedContainer = "container:Artsy.xcodeproj">
            </BuildableReference>
         </BuildActionEntry>
      </BuildActionEntries>
   </BuildAction>
   <TestAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      shouldUseLaunchSchemeArgsEnv = "YES"
      shouldAutocreateTestPlan = "YES">
   </TestAction>
   <LaunchAction
      buildConfiguration = "QA"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      launchStyle = "0"
      useCustomWorkingDirectory = "NO"
      ignoresPersistentStateOnLaunch = "NO"
      debugDocumentVersioning = "YES"
      debugServiceExtension = "internal"
      allowLocationSimulation = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
            BuildableName = "Artsy.app"
            BlueprintName = "Artsy"
            ReferencedContainer = "container:Artsy.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
   </LaunchAction>
   <ProfileAction
      buildConfiguration = "Debug"
      shouldUseLaunchSchemeArgsEnv = "YES"
      savedToolIdentifier = ""
      useCustomWorkingDirectory = "NO"
      debugDocumentVersioning = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
            BuildableName = "Artsy.app"
            BlueprintName = "Artsy"
            ReferencedContainer = "container:Artsy.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
   </ProfileAction>
   <AnalyzeAction
      buildConfiguration = "Debug">
   </AnalyzeAction>
   <ArchiveAction
      buildConfiguration = "QA"
      revealArchiveInOrganizer = "YES">
   </ArchiveAction>
</Scheme>
