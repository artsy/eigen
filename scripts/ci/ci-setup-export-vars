
#!/usr/bin/env bash
set -euxo pipefail


LOCAL_BRANCH=$(git rev-parse --abbrev-ref HEAD)
export LOCAL_BRANCH

# ios
export WORKSPACE="ios/Artsy.xcworkspace"
export SCHEME="Artsy"
export DEVICE_HOST_PLAT="iOS Simulator"
export DEVICE_HOST_OS="18.1"
export DEVICE_HOST_NAME="iPhone 16 Pro"
export DERIVED_DATA_PATH="derived_data"
export CONFIGURATION="Release"

# Configure ccache if available
if command -v ccache >/dev/null 2>&1; then
  echo "ccache found, configuring compilation cache"
  
  # Find ccache full path
  CCACHE_PATH=$(which ccache)
  echo "Found ccache at: $CCACHE_PATH"
  
  # Common ccache settings
  export CCACHE_DIR="${CCACHE_DIR:-~/.ccache}"
  export CCACHE_MAXSIZE="${CCACHE_MAXSIZE:-5G}"
  export CCACHE_CPP2=yes
  export CCACHE_SLOPPINESS=pch_defines,time_macros,include_file_mtime,file_macro

  # Ensure ccache directory exists
  mkdir -p "$CCACHE_DIR"
  
  # Always apply ccache settings for both platforms to ensure consistent behavior
  # iOS-specific settings - use full paths to avoid "not found" errors in Xcode
  export CC="$CCACHE_PATH /usr/bin/clang"
  export CXX="$CCACHE_PATH /usr/bin/clang++"
  
  # Android-specific settings
  export NDK_CCACHE="$CCACHE_PATH"
  
  # Log ccache configuration
  echo "CCACHE_DIR: $CCACHE_DIR"
  echo "CCACHE_MAXSIZE: $CCACHE_MAXSIZE" 
  echo "CC: $CC"
  echo "CXX: $CXX"
  echo "NDK_CCACHE: $NDK_CCACHE"
  
  # Log ccache stats before build
  ccache -s
else
  echo "ccache not found - compilation caching will not be available"
fi
